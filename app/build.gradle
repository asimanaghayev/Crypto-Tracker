plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

def properties = new Properties()
file("../build.properties").withInputStream {
    stream -> properties.load(stream)
}

android {
    compileSdkVersion buildVersions.compileSdkVersion
    buildToolsVersion buildVersions.buildToolsVersion

    defaultConfig {
        applicationId properties.getProperty(strings.APPLICATION_ID)
        minSdkVersion buildVersions.minSdkVersion
        targetSdkVersion buildVersions.targetSdkVersion
        versionCode properties.getProperty(strings.VERSION_CODE).toInteger()
        versionName properties.getProperty(strings.VERSION_NAME)

        buildConfigField(strings.STRING, strings.SERVER_URL, properties.getProperty(strings.SERVER_URL))

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            shrinkResources false
            minifyEnabled false
            jniDebuggable true
            renderscriptDebuggable true
        }
        release {
            debuggable false
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            jniDebuggable false
            renderscriptDebuggable false
        }
    }

    flavorDimensions "variant"

    productFlavors {
        production {
            applicationId properties.getProperty(strings.APPLICATION_ID)
            dimension "variant"
            manifestPlaceholders = [
                    appName: properties.getProperty(strings.APP_NAME),
                    appIcon: properties.getProperty(strings.APP_ICON)
            ]
        }
        develop {
            applicationId properties.getProperty(strings.SUFFIX_DEV + strings.APPLICATION_ID)
            dimension "variant"
            manifestPlaceholders = [
                    appName: properties.getProperty(strings.SUFFIX_DEV + strings.APP_NAME),
                    appIcon: properties.getProperty(strings.SUFFIX_DEV + strings.APP_ICON)
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = jdk.kotlinVersion
        freeCompilerArgs += [
                '-Xjvm-default=enable'
        ]
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    hilt {
        enableExperimentalClasspathAggregation = true
        enableAggregatingTask = true
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    api project(":module_network")

    implementation core.core
    implementation core.appCompat
    implementation core.material
    implementation core.recyclerView
    implementation core.constraint
    implementation core.timber
    implementation core.multidex

    // Test
    androidTestImplementation test.espressoCore
    androidTestImplementation test.androidxJunit
    androidTestImplementation test.rules
    androidTestImplementation test.truth
    testImplementation test.mockito
    testImplementation test.coreTesting
    testImplementation test.junit

    implementation lifeCycle.viewmodel
    implementation lifeCycle.livedata

    implementation di.android
    kapt di.daggerCompiler
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    implementation navigation.ui
    implementation navigation.fragment

    // DataBinding
    kapt "com.android.databinding:compiler:$version_compiler"

    implementation work.workManager

    implementation glide.core
    implementation glide.okhttp3
    kapt glide.compiler

    // shimmer loading
    implementation "com.facebook.shimmer:shimmer:$version_shimmer"

}